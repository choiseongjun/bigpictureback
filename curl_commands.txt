# 마커 조회 API - PostGIS 기반 (Postman용 curl 명령어들)
# 엔드포인트: GET /api/markers

# ===== 기본 파라미터 설명 =====
# lat, lng: 조회할 중심점의 위도/경도 (필수)
# lat_delta, lng_delta: 조회할 영역의 범위 (필수)
# zoom: 줌 레벨 (선택)
# emotion_tags: 감성 태그 필터링 (쉼표로 구분, 선택)
# min_likes: 최소 좋아요 수 (선택)
# min_views: 최소 조회수 (선택)
# sort_by: 정렬 기준 (likes, views, created_at, 선택)
# sort_order: 정렬 순서 (asc, desc, 선택)
# limit: 조회할 마커 개수 제한 (선택)

# ===== 기본 조회 예시들 =====

# 1. 기본 조회 (서울 시청 근처)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1" \
  -H "Content-Type: application/json"

# 2. 강남역 근처 조회 (더 작은 범위)
curl -X GET "http://localhost:8080/api/markers?lat=37.4981&lng=127.0276&lat_delta=0.05&lng_delta=0.05" \
  -H "Content-Type: application/json"

# 3. 홍대입구 근처 조회
curl -X GET "http://localhost:8080/api/markers?lat=37.5572&lng=126.9254&lat_delta=0.08&lng_delta=0.08" \
  -H "Content-Type: application/json"

# 4. 더 넓은 범위 조회 (서울 전체)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.5&lng_delta=0.5" \
  -H "Content-Type: application/json"

# ===== 필터링 예시들 =====

# 5. 감성 태그 필터링 (😍,☕)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&emotion_tags=😍,☕" \
  -H "Content-Type: application/json"

# 6. 단일 감성 태그 필터링 (🎵)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&emotion_tags=🎵" \
  -H "Content-Type: application/json"

# 7. 최소 좋아요 수 필터링 (10개 이상)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&min_likes=10" \
  -H "Content-Type: application/json"

# 8. 최소 조회수 필터링 (100회 이상)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&min_views=100" \
  -H "Content-Type: application/json"

# ===== 정렬 예시들 =====

# 9. 좋아요 수로 정렬 (내림차순 - 인기순)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&sort_by=likes&sort_order=desc" \
  -H "Content-Type: application/json"

# 10. 조회수로 정렬 (오름차순)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&sort_by=views&sort_order=asc" \
  -H "Content-Type: application/json"

# 11. 생성일 기준 정렬 (최신순)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&sort_by=created_at&sort_order=desc" \
  -H "Content-Type: application/json"

# 12. 생성일 기준 정렬 (오래된순)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&sort_by=created_at&sort_order=asc" \
  -H "Content-Type: application/json"

# ===== 복합 필터링 예시들 =====

# 13. 감성 태그 + 최소 좋아요 + 정렬 (인기 마커)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&emotion_tags=😍,☕&min_likes=10&min_views=100&sort_by=likes&sort_order=desc" \
  -H "Content-Type: application/json"

# 14. 최신 인기 마커 (최근 생성된 것 중 좋아요 많은 순)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&min_likes=5&sort_by=created_at&sort_order=desc" \
  -H "Content-Type: application/json"

# 15. 조회수 높은 마커 (트렌딩)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&min_views=50&sort_by=views&sort_order=desc" \
  -H "Content-Type: application/json"

# ===== 성능 최적화 예시들 =====

# 16. 결과 개수 제한 (20개)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&limit=20" \
  -H "Content-Type: application/json"

# 17. 줌 레벨 포함 (모바일 앱용)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&zoom=12&limit=50" \
  -H "Content-Type: application/json"

# 18. 완전한 파라미터 조합 (프로덕션용)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&zoom=12&emotion_tags=😍,☕,🎵&min_likes=10&min_views=100&sort_by=likes&sort_order=desc&limit=50" \
  -H "Content-Type: application/json"

# ===== 지역별 테스트 예시들 =====

# 19. 부산 해운대
curl -X GET "http://localhost:8080/api/markers?lat=35.1586&lng=129.1603&lat_delta=0.1&lng_delta=0.1" \
  -H "Content-Type: application/json"

# 20. 대구 동성로
curl -X GET "http://localhost:8080/api/markers?lat=35.8714&lng=128.6014&lat_delta=0.08&lng_delta=0.08" \
  -H "Content-Type: application/json"

# 21. 인천 송도
curl -X GET "http://localhost:8080/api/markers?lat=37.3826&lng=126.6432&lat_delta=0.1&lng_delta=0.1" \
  -H "Content-Type: application/json"

# ===== 에러 테스트 예시들 =====

# 22. 필수 파라미터 누락 (에러 발생 예상)
curl -X GET "http://localhost:8080/api/markers" \
  -H "Content-Type: application/json"

# 23. 잘못된 좌표값 (에러 발생 예상)
curl -X GET "http://localhost:8080/api/markers?lat=999&lng=999&lat_delta=0.1&lng_delta=0.1" \
  -H "Content-Type: application/json"

# 24. 잘못된 정렬 파라미터 (에러 발생 예상)
curl -X GET "http://localhost:8080/api/markers?lat=37.5665&lng=126.9780&lat_delta=0.1&lng_delta=0.1&sort_by=invalid&sort_order=invalid" \
  -H "Content-Type: application/json"

# ===== 응답 형식 =====
# 성공 시:
# {
#   "success": true,
#   "data": [...], // 마커 배열
#   "count": 10    // 조회된 마커 개수
# }
#
# 실패 시:
# {
#   "success": false,
#   "message": "에러 메시지"
# } 